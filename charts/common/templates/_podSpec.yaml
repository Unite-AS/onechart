{{- define "common.podSpec.tpl" -}}
{{- with .Values.imagePullSecrets }}
imagePullSecrets:
  {{- range . }}
  - name: {{ . }}
  {{- end }}
{{- end }}
{{- if .Values.podSecurityContext }}
securityContext:
  runAsNonRoot: {{ hasKey .Values.podSecurityContext "runAsNonRoot" | ternary .Values.podSecurityContext.runAsNonRoot true }}
  runAsUser: {{ hasKey .Values.podSecurityContext "runAsUser" | ternary .Values.podSecurityContext.runAsUser 621 }}
  allowPrivilegeEscalation: {{ hasKey .Values.podSecurityContext "allowPrivilegeEscalation" | ternary .Values.podSecurityContext.allowPrivilegeEscalation false }}
  {{- range $key, $value := .Values.podSecurityContext }}
  {{- if not (or (eq $key "runAsNonRoot") (eq $key "runAsUser") (eq $key "allowPrivilegeEscalation")) }}
  {{ $key }}: {{ $value }}
  {{- end }}
  {{- end }}
{{- else }}
securityContext:
  runAsNonRoot: true
  runAsUser: 621
  allowPrivilegeEscalation: false
{{- end }}
{{- if .Values.serviceAccount }}
serviceAccountName: {{ .Values.serviceAccount }}
{{- end }}
initContainers:
  {{- range .Values.initContainers }}
  - name:  {{ .name }}
    image: "{{ .image }}:{{ .tag }}"
    imagePullPolicy: {{ .imagePullPolicy | default "IfNotPresent" }}
    {{- if .restartPolicy }}
    restartPolicy: {{ .restartPolicy }}
    {{- end }}
    {{- include "common.envFromRef.tpl" $ | nindent 4 }}
    {{- if .command }}
    command:
      - {{ $.Values.shell }}
      - -c
      - {{ .command | quote}}
    {{- end }}
    volumeMounts:
    {{- range $.Values.volumes }}
    {{- if (or (hasPrefix "shared-" .name) (hasPrefix "init-" .name))}}
    - mountPath: {{ .path }}
      name: {{ .name }}
    {{- end }}
    {{- end }}
    {{- if .securityContext }}
    securityContext:
    {{- toYaml .securityContext | nindent 6 }}
    {{- else }}
    securityContext:
      runAsNonRoot: true
      runAsUser: 621
      allowPrivilegeEscalation: false
    {{- end}}
    {{- if .resources }}
    resources:
    {{- toYaml .resources | nindent 6 }}
    {{- end }}
  {{- end }}
containers:
  {{- $containerTpl := include "common.container.tpl" . | fromYaml }}
  {{- $container := mergeOverwrite $containerTpl .Values.container }}
  - {{ toYaml $container | nindent 4 }}
    {{- include "common.envFromRef.tpl" . | nindent 4 }}
    {{- include "common.volumeMountsRef.tpl" . | nindent 4 }}
  {{- if .Values.sidecar }}
  - name: {{ template "robustName" .Release.Name }}-sidecar
    {{- if .Values.securityContext }}
    securityContext:
      runAsNonRoot: {{ hasKey .Values.securityContext "runAsNonRoot" | ternary .Values.securityContext.runAsNonRoot true }}
      runAsUser: {{ hasKey .Values.securityContext "runAsUser" | ternary .Values.securityContext.runAsUser 621 }}
      allowPrivilegeEscalation: {{ hasKey .Values.securityContext "allowPrivilegeEscalation" | ternary .Values.securityContext.allowPrivilegeEscalation false }}
      {{- range $key, $value := .Values.securityContext }}
      {{- if not (or (eq $key "runAsNonRoot") (eq $key "runAsUser") (eq $key "allowPrivilegeEscalation")) }}
      {{ $key }}: {{ $value }}
      {{- end }}
      {{- end }}
    {{- else }}
    securityContext:
      runAsNonRoot: true
      runAsUser: 621
      allowPrivilegeEscalation: false
    {{- end }}
    image: {{ .Values.sidecar.repository }}:{{ .Values.sidecar.tag }}
    {{- if .Values.sidecar.command }}
    command:
      - {{ .Values.sidecar.shell }}
      - -c
      - {{ .Values.sidecar.command | quote }}
    {{- end }}
    {{- include "common.envFromRef.tpl" . | nindent 4 }}
    {{- include "common.volumeMountsRef.tpl" . | nindent 4 }}
  {{- end }}
{{- include "common.volumesRef.tpl" . }}
{{- with .Values.nodeSelector }}
nodeSelector:
  {{- toYaml . | nindent 2 }}
{{- end }}
{{- if or .Values.spreadAcrossNodes .Values.affinity }}
affinity:
  {{- if .Values.spreadAcrossNodes }}
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: "app.kubernetes.io/instance"
              operator: In
              values:
                - {{ template "robustName" .Release.Name }}
        topologyKey: "kubernetes.io/hostname"
  {{- end }}
  {{- if .Values.affinity }}
  {{- toYaml .Values.affinity | nindent 2 }}
  {{- end }}
{{- end }}
{{- with .Values.tolerations }}
tolerations:
  {{- toYaml . | nindent 2 }}
{{- end }}
{{- end }}
